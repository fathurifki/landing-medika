---
import Layouts from "@layouts/Layouts.astro";
import { Image } from "astro:assets";
import React, { useState, useEffect } from "react";

import InputComponent from "@components/input/InputComponent.jsx";
const API_URL = import.meta.env.PUBLIC_API ?? process.env.PUBLIC_API;
const IMAGE_URL = import.meta.env.PUBLIC_IMAGE ?? process.env.PUBLIC_IMAGE;

interface CatalogItem {
    uuid: number;
    status: string;
    sort: null;
    user_created: string;
    date_created: Date;
    product_image: string;
    name: string;
    tags: string[];
    image_files: string[];
}

interface FetchDataResponse {
    catalogProduct: CatalogItem[];
}

async function fetchData(filters = {}): Promise<FetchDataResponse | undefined> {
    try {
        const query = new URLSearchParams(filters).toString();
        const response = await fetch(`${API_URL}/items/Catalog?${query}`);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const data = await response.json();
        // You can now use the fetched data as needed
        return {
            catalogProduct: data?.data,
        };
    } catch (error) {
        console.error("Error fetching data:", error);
    }
}

const { catalogProduct } = (await fetchData()) ?? { catalogProduct: [] };
const { slug } = Astro.params;
---

<Layouts title="products">
    <main class="p-8">
        <section id="product-search" class="mb-8">
            <InputComponent
                client:load
                params={slug}
                API_URL={API_URL}
                IMAGE_URL={IMAGE_URL}
            />
            <span>product</span>
        </section>
    </main>
</Layouts>
